
plugins {
  id "org.gretty" version "3.0.3"
}

apply plugin: 'war'

repositories {
    jcenter()
}

war.archiveVersion = ''
war.archiveBaseName = 'scooter'

sourceSets.main.java.srcDirs 'src'

gretty {
    httpPort=8787
    // stopPort=8089
    // stopKey='codeRed'
}

import java.text.SimpleDateFormat

task generateDevHtml() {
    doLast {
        new File("dev.html").withWriter { writer ->
            def token = new SimpleDateFormat("mmddHHmmss").format(new Date())
            def tokenStr = new SimpleDateFormat("mm-dd-HH:mm:ss").format(new Date())
            def html = """
            <html>
            <!-- DON'T EDIT OR COMMIT. Auto-generated by Gradle task 'generateDevHtml' -->
            <body>
            <h2>generated on ${tokenStr}</h2>
            <hr/>
            <h2>To run, use ./run.sh</h2>
            <a href="http://localhost:8787/scooter/index.html?token=${token}">Run Scooter</a>
            <hr/>
            <h2>To test, use ./test.sh</h2>
            <a href="http://localhost:8000/test/SpecRunner.html">Test Scooter</a>
            </body>
            </html>        
            """
            writer.write(html)
        }
    }
}

task generateAttendeeListEditThisOne() {
    doLast {
        def names = new StringBuilder()
        
        new File("NAMES.txt").eachLine { line ->
            def trimLine = line.trim()

            if (!trimLine.isEmpty()) {
                def thisName = "\"${trimLine}\",\n"
                names.append(thisName)
            }
        }
        
        new File("src/main/webapp/ATTENDEE_LIST_EDIT_THIS_ONE.js").withWriter { writer ->
            writer.write("// auto-generated from NAMES.txt\n")
            writer.write("let ATTENDEE_LIST = [\n");
            writer.write(names.toString())
            writer.write("];");
        }
    }
}
